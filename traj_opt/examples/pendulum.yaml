##
#
# This file contains parameters for the pendulum swingup problem.
#
##

# Initial state
q_init : [0.0]
v_init : [0.0]

# Target state. The target positions q_nom are defined by linear interpolation
# between q_nom_start and q_nom_end. Target velocities v_nom are defined to be
# consistent with q_nom.
q_nom_start : [3.1415]
q_nom_end : [3.1415]

# Initial guess. The initial sequence of generalized positions is generated by
# linearly iterpolating between q_init and q_guess.
q_guess : [0.0]

# Cost Weights. These define diagonal matrices, again with the ordering
# [finger 1, finger 2, spinner]
Qq : [1.0]  # Running cost
Qv : [0.1]
R : [1.0]

Qfq : [10]  # Terminal cost
Qfv : [1.0]

# Problem definition parameters
time_step : 0.05  # Discretization timestep (seconds)
num_steps : 40    # number of timesteps

# Solver parameters
max_iters : 250             # maximum Gauss-Newton iterations
method : "trust_region"     # solver method, {linesearch, trust_region}
linesearch : "armijo"       # linesearch strategy, {armino, backtracking}
proximal_operator : false   # whether to add a proximal operator cost term
rho_proximal : 1e-5         # the proximal cost multiplier

# Method used to compute gradients of inverse dynamics, one of
# {forward_differences, central_differences, central_differences4, autodiff}
gradients_method: "central_differences"

# Playback/visualization parameters
play_target_trajectory : true
play_initial_guess : true
play_optimal_trajectory : true

# Debugging parameters
linesearch_plot_every_iteration : false
print_debug_data : false
save_solver_stats_csv : true

# MPC parameters
mpc : true
mpc_iters : 2
controller_frequency : 50
sim_time : 5
sim_time_step : 1e-3
sim_realtime_rate : 1.0
lqr : true        # use LQR instead of PD+
